{"version":3,"sources":["services/auth.service.js","components/login.component.js","components/register.component.js","services/auth-header.js","services/user.service.js","components/home.component.js","components/profile.component.js","components/board-admin.component.js","services/book.service.js","components/book-component.js","components/bookList-component.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","username","password","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","email","parse","getItem","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","state","loading","message","e","this","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","src","alt","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","style","display","Component","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","register","authHeader","user","get","headers","Home","content","UserService","getPublicContent","Profile","redirect","userReady","currentUser","getCurrentUser","to","BoardAdmin","getAdminBoard","id","put","delete","title","AddBook","onChangeTitle","onChangeDescription","saveBook","newBook","description","submitted","BookDataService","create","console","log","catch","onClick","BookList","retrieveBooks","refreshList","setActiveBook","removeAllBooks","removeBook","books","currentBook","currentIndex","getAll","book","index","deleteAll","map","key","App","logOut","showAdminBoard","undefined","roles","includes","logout","href","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.71aa513e.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"http://localhost:8080/api/auth/\";\n\nclass AuthService {\n  login(username, password) {\n    return axios\n      .post(API_URL + \"signin\", {\n        username,\n        password\n      })\n      .then(response => {\n        if (response.data.accessToken) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username, email, password) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));;\n  }\n}\n\nexport default new AuthService();\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.login(this.state.username, this.state.password).then(\n        () => {\n          this.props.history.push(\"/profile\");\n          window.location.reload();\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            loading: false,\n            message: resMessage\n          });\n        }\n      );\n    } else {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleLogin}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <Input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.onChangeUsername}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <button\n                className=\"btn btn-primary btn-block\"\n                disabled={this.state.loading}\n              >\n                {this.state.loading && (\n                  <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                <span>Login</span>\n              </button>\n            </div>\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst email = value => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vusername = value => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      successful: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.register(\n        this.state.username,\n        this.state.email,\n        this.state.password\n      ).then(\n        response => {\n          this.setState({\n            message: response.data.message,\n            successful: true\n          });\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleRegister}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Username</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChangeUsername}\n                    validations={[required, vusername]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChangeEmail}\n                    validations={[required, email]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChangePassword}\n                    validations={[required, vpassword]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                </div>\n              </div>\n            )}\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    this.state.successful\n                      ? \"alert alert-success\"\n                      : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  if (user && user.accessToken) {\n    // return { Authorization: 'Bearer ' + user.accessToken }; // for Spring Boot back-end\n    return { 'x-access-token': user.accessToken };       // for Node.js Express back-end\n  } else {\n    return {};\n  }\n}\n","import axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_URL = 'http://localhost:8080/api/test/';\n\nclass UserService {\n  getPublicContent() {\n    return axios.get(API_URL + 'all');\n  }\n\n\n  getAdminBoard() {\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\n  }\n}\n\nexport default new UserService();\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getPublicContent().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response && error.response.data) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport AuthService from \"../services/auth.service\";\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      redirect: null,\n      userReady: false,\n      currentUser: { username: \"\" }\n    };\n  }\n\n  componentDidMount() {\n    const currentUser = AuthService.getCurrentUser();\n\n    if (!currentUser) this.setState({ redirect: \"/home\" });\n    this.setState({ currentUser: currentUser, userReady: true })\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />\n    }\n\n    const { currentUser } = this.state;\n\n    return (\n      <div className=\"container\">\n        {(this.state.userReady) ?\n          <div>\n            <header className=\"jumbotron\">\n              <h3>\n                <strong>{currentUser.username}</strong> Profile\n          </h3>\n            </header>\n          </div> : null}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardAdmin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getAdminBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","\r\nimport axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = 'http://localhost:8080/api/test/';\r\n\r\nclass BookDataService {\r\n\r\n  create(data) {\r\n    return axios.post(API_URL + 'add', data);\r\n  }\r\n\r\n  getAll() {\r\n    return axios.get(API_URL + 'find');\r\n  }\r\n\r\n  get(id) {\r\n    return axios.get(API_URL + `find/${id}`);\r\n  }\r\n\r\n  update(id, data) {\r\n    return axios.put(API_URL + `update/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return axios.delete(API_URL + `delete/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return axios.delete(API_URL + 'delete');\r\n  }\r\n\r\n  findByTitle(title) {\r\n    return axios.get(`API_URL ? title=${title}`);\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default new BookDataService();","import React, { Component } from \"react\";\r\nimport BookDataService from \"../services/book.service\";\r\n\r\nexport default class AddBook extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.saveBook = this.saveBook.bind(this);\r\n    this.newBook = this.newBook.bind(this);\r\n\r\n    this.state = {\r\n      id: null,\r\n      title: \"\",\r\n      description: \"\",\r\n\r\n      submitted: false\r\n    };\r\n  }\r\n\r\n  onChangeTitle(e) {\r\n    this.setState({\r\n      title: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value\r\n    });\r\n  }\r\n\r\n  saveBook() {\r\n    var data = {\r\n      title: this.state.title,\r\n      description: this.state.description\r\n    };\r\n\r\n    BookDataService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          title: response.data.title,\r\n          description: response.data.description,\r\n          submitted: true\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newBook() {\r\n    this.setState({\r\n      id: null,\r\n      title: \"\",\r\n      description: \"\",\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newBook}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n            <div className=\"col-md-6\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  required\r\n                  value={this.state.title}\r\n                  onChange={this.onChangeTitle}\r\n                  name=\"title\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"description\"\r\n                  required\r\n                  value={this.state.description}\r\n                  onChange={this.onChangeDescription}\r\n                  name=\"description\"\r\n                />\r\n              </div>\r\n\r\n              <button onClick={this.saveBook} className=\"btn btn-success\">\r\n                Submit\r\n            </button>\r\n            </div>\r\n          )}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport BookDataService from \"../services/book.service\";\r\n\r\n\r\n//const API_URL = 'http://localhost:8080/api/test/';\r\n\r\nexport default class BookList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.retrieveBooks = this.retrieveBooks.bind(this);\r\n        this.refreshList = this.refreshList.bind(this);\r\n        this.setActiveBook = this.setActiveBook.bind(this);\r\n        this.removeAllBooks = this.removeAllBooks.bind(this);\r\n        this.removeBook = this.removeBook.bind(this);\r\n        \r\n        this.state = {\r\n          books: [],\r\n          currentBook: null,\r\n          currentIndex: -1,\r\n        };\r\n      }\r\n    \r\n      componentDidMount() {\r\n        this.retrieveBooks();\r\n      }\r\n    \r\n\r\n      retrieveBooks() {\r\n        BookDataService.getAll()\r\n          .then(response => {\r\n            this.setState({\r\n              books: response.data\r\n            });\r\n            console.log(response.data);\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n      }\r\n    \r\n      refreshList() {\r\n        this.retrieveBooks();\r\n        this.setState({\r\n          currentBook: null,\r\n          currentIndex: -1\r\n        });\r\n      }\r\n\r\n      setActiveBook(book, index) {\r\n        this.setState({\r\n          currentBook: book,\r\n          currentIndex: index\r\n        });\r\n      }\r\n\r\n      removeAllBooks() {\r\n        BookDataService.deleteAll()\r\n          .then(response => {\r\n            console.log(response.data);\r\n            this.refreshList();\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n      }\r\n\r\n      removeBook() {\r\n        BookDataService.delete(this.state.currentBook.id)\r\n          .then(response => {\r\n            console.log(response.data);\r\n            this.props.history.push('/delete')\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n      }\r\n\r\n    render(){\r\n        const { books, currentBook ,currentIndex } = this.state;\r\n\r\n            return (\r\n                <div className=\"list row\">\r\n                  <div className=\"col-md-8\">\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                <h4>Book List</h4>\r\n                <ul className=\"list-group\">\r\n                    {books &&\r\n                    books.map((book, index) => (\r\n                        <li\r\n                        className={\r\n                            \"list-group-item \" +\r\n                            (index === currentIndex ? \"active\" : \"\")\r\n                        }\r\n                        onClick={() => this.setActiveBook(book, index)}\r\n                        key={index}\r\n                        >\r\n                        {book.title}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            <button\r\n                className=\"m-3 btn btn-sm btn-danger\"\r\n                onClick={this.removeAllBooks}>\r\n                Remove All\r\n            </button>\r\n            </div>\r\n        <div className=\"col-md-6\">\r\n          {currentBook ? (\r\n            <div>\r\n              <h4>Book</h4>\r\n              <div>\r\n                <label>\r\n                  <strong>Title:</strong>\r\n                </label>{\" \"}\r\n                {currentBook.title}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Description:</strong>\r\n                </label>{\" \"}\r\n                {currentBook.description}\r\n              </div>\r\n              <button\r\n                className=\"m-3 btn btn-sm btn-danger\"\r\n                onClick={this.removeBook}>\r\n                Remove\r\n            </button>\r\n              \r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <br />\r\n              <p>Please click on a book title...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AuthService from \"./services/auth.service\";\n\nimport Login from \"./components/login.component\";\nimport Register from \"./components/register.component\";\nimport Home from \"./components/home.component\";\nimport Profile from \"./components/profile.component\";\nimport BoardAdmin from \"./components/board-admin.component\";\nimport AddBook from \"./components/book-component.js\";\nimport BookList from \"./components/bookList-component.js\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      showAdminBoard: false,\n      currentUser: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\n      });\n    }\n  }\n\n  logOut() {\n    AuthService.logout();\n  }\n\n  render() {\n    const { currentUser, showAdminBoard } = this.state;\n\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <Link to={\"/\"} className=\"navbar-brand\">\n            Student Library System\n          </Link>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/home\"} className=\"nav-link\">\n                Home\n              </Link>\n            </li>\n            {showAdminBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/admin\"} className=\"nav-link\">\n                  Admin Board\n                </Link>\n              </li>\n            )}\n            {showAdminBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/add\"} className=\"nav-link\">\n                  Add Books\n                </Link>\n              </li>\n            )}\n            {showAdminBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/find\"} className=\"nav-link\">\n                  Book List\n                </Link>\n              </li>\n            )}\n          </div>\n          {currentUser ? (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/profile\"} className=\"nav-link\">\n                  {currentUser.username}\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\n                  LogOut\n                </a>\n              </li>\n            </div>\n          ) : (\n              <div className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <Link to={\"/login\"} className=\"nav-link\">\n                    Login\n                </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to={\"/register\"} className=\"nav-link\">\n                    Sign Up\n                </Link>\n                </li>\n              </div>\n            )}\n        </nav>\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/home\", \"/\"]} component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route path=\"/admin\" component={BoardAdmin} />\n            <Route path=\"/add\" component={AddBook} />\n            <Route path=\"/find\" component={BookList} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}